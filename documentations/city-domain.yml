swagger: '2.0'
info:
  description: '"Exposes all route data for search and management. Admins only"'
  version: '1.0'
  title: City domain service
  contact:
    url: 'https://github.com/CezarAug/'
    name: Cezar Augusto
    email: cezar804@gmail.com
host: 'localhost:8010'
basePath: /
tags:
  - name: route-controller
    description: Operations for routes in Travel Itinerary services. Admins only
paths:
  /route:
    get:
      tags:
        - route-controller
      summary: Returns all routes registered.
      operationId: findAllCitiesUsingGET
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: Returns a list of routes.
          schema:
            type: array
            items:
              $ref: '#/definitions/Route'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Any Internal server errors
          schema:
            $ref: '#/definitions/ApiError'
      deprecated: false
    post:
      tags:
        - route-controller
      summary: Creates new routes based on the provided list
      operationId: postCityListUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
        - application/json
      parameters:
        - in: body
          name: route
          description: route
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Route'
      responses:
        '200':
          description: Returns a list of routes starting from the provided city
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Any Internal server errors
          schema:
            $ref: '#/definitions/ApiError'
      deprecated: false
    delete:
      tags:
        - route-controller
      summary: Deletes all routes from the database
      operationId: deleteAllCitiesUsingDELETE
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: Returns a list of routes starting from the provided city
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Any Internal server errors
          schema:
            $ref: '#/definitions/ApiError'
      deprecated: false
  '/route/{cityName}':
    get:
      tags:
        - route-controller
      summary: Returns all routes registered for the provided origin city
      operationId: findRoutesByCityNameUsingGET
      produces:
        - application/json
      parameters:
        - name: cityName
          in: path
          description: cityName
          required: true
          type: string
      responses:
        '200':
          description: Returns a list of routes starting from the provided city
          schema:
            type: array
            items:
              $ref: '#/definitions/Route'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Any Internal server errors
          schema:
            $ref: '#/definitions/ApiError'
      deprecated: false
definitions:
  ApiError:
    type: object
    required:
      - errors
      - message
      - status
    properties:
      errors:
        type: array
        items:
          type: string
      message:
        type: string
        example: internal server error
      status:
        type: string
        example: 500
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
    title: ApiError
    description: Default API error.
  Route:
    type: object
    required:
      - city
    properties:
      arrivalTime:
        type: string
        example: '03:00'
      city:
        type: string
        example: GRU - Guarulhos
      departureTime:
        type: string
        example: '00:00'
      destination:
        type: string
        example: REC - Recife
    title: Route
    description: Defines a route between two cities.
